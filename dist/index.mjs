import{useState as e,useEffect as n,useReducer as t}from"react";function o(){const[t,o]=e(!0);function r(){o(!0)}function i(){o(!1)}return n((()=>(window.addEventListener("online",r),window.addEventListener("offline",i),()=>(window.removeEventListener("online",r),window.removeEventListener("offline",i)))),[t]),{isOnline:t}}function r(e){const{threshold:t=0,rootMargin:o="0px",root:r,className:i,target:c}=e,s=()=>{if(void 0!==typeof IntersectionObserver){const e=new IntersectionObserver((n=>{n.forEach((n=>{n.target.classList.toggle(i),n.isIntersecting&&e.unobserve(n.target)}))}),{threshold:t,root:r,rootMargin:o});document.querySelectorAll(c).forEach((n=>{e.observe(n)}))}};n((()=>{s()}),[s])}function i(){const e=["0","1","2","3","4","5","6","7","8","9","0"],n=["Backspace","Delete","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","ShiftLeft","AltLeft","F5"],[o,r]=t(((e,n)=>n),"");return{value:o,setValue:e=>{r(e)},handleKey:t=>{const o=t;return!(!e.includes(o.key)&&!n.includes(o.code))||(o.preventDefault(),!1)}}}function c(){const[t,o]=e(navigator.language);return n((()=>{(()=>{const e=navigator.languages;o(e[1])})()}),[t]),{lang:t}}function s(t){const[o,r]=e({});return n((()=>{(()=>{const e=window?.navigator;if(e&&"connection"in e){const n=e.connection;r({downlink:n.downlink,effectiveType:n.effectiveType,rtt:n.rtt,saveData:n.saveData})}})()}),[o?.downlink,o?.effectiveType,o?.rtt]),{network:o}}export{i as useAcceptOnlyInteger,r as useIntersectionObserver,c as useLanguage,s as useNetworkConnection,o as useOnline};
//# sourceMappingURL=index.mjs.map
