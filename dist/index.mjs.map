{"version":3,"file":"index.mjs","sources":["../src/useOnline.ts","../src/useIntersectionObserver.ts","../src/useAcceptOnlyInteger.ts","../src/useLanguage.ts","../src/useNetworkConnection.ts","../src/useMouseMove.ts","../src/types.ts","../src/useGeolocation.ts","../src/useWindowSize.ts"],"sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nexport interface useOnline {\r\n\tisOnline: boolean\r\n}\r\n\r\n/**\r\n * Return a boolean value based on the internet connection.\r\n *\r\n * @default `true`\r\n *\r\n * @return `boolean`\r\n *\r\n * @see https://urh-react-hooks.vercel.app/docs/hooks/use-online\r\n */\r\nexport function useOnline(): useOnline {\r\n\tconst [isOnline, setIsOnline] = useState<boolean>(true)\r\n\r\n\tfunction online() {\r\n\t\tsetIsOnline(true)\r\n\t}\r\n\r\n\tfunction offline() {\r\n\t\tsetIsOnline(false)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('online', online)\r\n\t\twindow.addEventListener('offline', offline)\r\n\r\n\t\treturn () => (\r\n\t\t\twindow.removeEventListener('online', online),\r\n\t\t\twindow.removeEventListener('offline', offline)\r\n\t\t)\r\n\t}, [isOnline])\r\n\r\n\treturn {\r\n\t\tisOnline,\r\n\t}\r\n}\r\n","import { useEffect } from 'react'\r\n\r\nexport interface intersectionObserverOptions {\r\n\tthreshold?: number\r\n\trootMargin?: string | undefined\r\n\troot?: Element | Document | null | undefined\r\n\r\n\t/**\r\n\t * a target where you want it to observe\r\n\t */\r\n\ttarget: string\r\n\r\n\t/**\r\n\t * a class where you add to style base on your preferences\r\n\t */\r\n\tclassName: string\r\n}\r\n\r\n/**\r\n * Trigger an element when reaching the target.\r\n * @params `threshold` , `rootMargin`, `root`, `target`, `className`\r\n * @types number, string | px | em | rem | etc, Element | Document | null | undefined, string, string\r\n * @return void\r\n * @see https://urh-react-hooks.vercel.app/docs/hooks/user-intersect\r\n */\r\nexport function useIntersectionObserver(options: intersectionObserverOptions) {\r\n\tconst {\r\n\t\tthreshold = 0,\r\n\t\trootMargin = '0px',\r\n\t\troot = undefined,\r\n\t\tclassName,\r\n\t\ttarget,\r\n\t} = options\r\n\r\n\tconst intersect = () => {\r\n\t\tif (typeof IntersectionObserver !== undefined) {\r\n\t\t\tconst observer = new IntersectionObserver(\r\n\t\t\t\t(entries) => {\r\n\t\t\t\t\tentries.forEach((entry) => {\r\n\t\t\t\t\t\tentry.target.classList.toggle(className)\r\n\r\n\t\t\t\t\t\tif (entry.isIntersecting) observer.unobserve(entry.target)\r\n\t\t\t\t\t})\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tthreshold: threshold,\r\n\t\t\t\t\troot: root,\r\n\t\t\t\t\trootMargin: rootMargin,\r\n\t\t\t\t},\r\n\t\t\t)\r\n\r\n\t\t\tdocument.querySelectorAll(target).forEach((t: Element) => {\r\n\t\t\t\tobserver.observe(t)\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tintersect()\r\n\t}, [intersect])\r\n}\r\n","import { useReducer } from 'react'\r\n\r\n/**\r\n * A hook use to accept only interger of an input field\r\n * * use Ctrl + Backspace to clear all value in input field\r\n * @returns `value` , `setValue`, `handleKey`\r\n * @see https://urh-react-hooks.vercel.app/docs/hooks/use-accept-only-interger\r\n * @example\r\n * ```tsx\r\n * const { value, setValue, handleKey } = useAcceptOnlyInteger\r\n * return (\r\n *   <input\r\n *     type=\"text\"\r\n *     value={value}\r\n *     onChange={(e) => setValue(e.target.value)}\r\n *     onKeyDown={handleKey}\r\n *   />\r\n * )\r\n * ```\r\n */\r\nexport function useAcceptOnlyInteger() {\r\n\tconst keysCanBeAccept = [\r\n\t\t'0',\r\n\t\t'1',\r\n\t\t'2',\r\n\t\t'3',\r\n\t\t'4',\r\n\t\t'5',\r\n\t\t'6',\r\n\t\t'7',\r\n\t\t'8',\r\n\t\t'9',\r\n\t\t'0',\r\n\t]\r\n\r\n\tconst allowKey = [\r\n\t\t'Backspace',\r\n\t\t'Delete',\r\n\t\t'ArrowUp',\r\n\t\t'ArrowDown',\r\n\t\t'ArrowLeft',\r\n\t\t'ArrowRight',\r\n\t\t'ShiftLeft',\r\n\t\t'AltLeft',\r\n\t\t'F5',\r\n\t]\r\n\r\n\tconst [value, dispatch] = useReducer((state: string, action: string) => {\r\n\t\treturn (state = action)\r\n\t}, '')\r\n\r\n\t/**\r\n\t * Set a value\r\n\t * @param value accept the value when pass the key\r\n\t */\r\n\tconst setValue = (value: string) => {\r\n\t\tdispatch(value)\r\n\t}\r\n\r\n\t/**\r\n\t * Allow user to input only integer\r\n\t * @param event accept keyboard event\r\n\t */\r\n\tconst handleKey = (event: any): boolean => {\r\n\t\tconst ev = event as KeyboardEvent\r\n\r\n\t\tif (keysCanBeAccept.includes(ev.key) || allowKey.includes(ev.code)) {\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\tev.preventDefault()\r\n\t\treturn false\r\n\t}\r\n\r\n\treturn {\r\n\t\tvalue,\r\n\t\tsetValue,\r\n\t\thandleKey,\r\n\t}\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\n/**\r\n * Return a current language\r\n * @return language\r\n * @see https://urh-react-hooks.vercel.app/docs/hooks/use-language\r\n */\r\nexport function useLanguage() {\r\n\tconst [lang, setLang] = useState<string>(navigator.language)\r\n\r\n\tconst init = () => {\r\n\t\tconst language = navigator.languages\r\n\r\n\t\tsetLang(language[1])\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tinit()\r\n\t}, [lang])\r\n\r\n\treturn {\r\n\t\tlang,\r\n\t}\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\ntype options = {\r\n\t/**\r\n\t * Current type of network\r\n\t */\r\n\teffectiveType: '4g' | '3g' | '2g' | 'slow-2g'\r\n\r\n\t/**\r\n\t * Return downlink speeds\r\n\t */\r\n\tdownlink: number\r\n\r\n\t/**\r\n\t * effective round-trip time of the current connection\r\n\t */\r\n\trtt: number\r\n\r\n\tsaveData: boolean\r\n}\r\n\r\n/**\r\n * Return a current status of network.\r\n * @see https://urh-react-hooks.vercel.app/docs/hooks/use-network-connection\r\n */\r\nexport function useNetworkConnection(options?: options) {\r\n\tconst [network, setNetwork] = useState<typeof options>({} as options)\r\n\r\n\tconst init = () => {\r\n\t\tconst navigator = window?.navigator\r\n\r\n\t\tif (navigator && 'connection' in navigator) {\r\n\t\t\tconst nav = (navigator as any).connection as options\r\n\t\t\tsetNetwork({\r\n\t\t\t\tdownlink: nav.downlink,\r\n\t\t\t\teffectiveType: nav.effectiveType,\r\n\t\t\t\trtt: nav.rtt,\r\n\t\t\t\tsaveData: nav.saveData,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tinit()\r\n\t}, [network?.downlink, network?.effectiveType, network?.rtt])\r\n\r\n\treturn {\r\n\t\tnetwork,\r\n\t}\r\n}\r\n","import { useState } from 'react'\r\nimport { useEventListener } from './types'\r\n\r\nexport type MouseOptions = {\r\n\t/**\r\n\t * The X coordinate of the mouse pointer in local (DOM content) coordinates.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tclientX: number\r\n\r\n\t/**\r\n\t * The Y coordinate of the mouse pointer in local (DOM content) coordinates.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tclientY: number\r\n\r\n\t/**\r\n\t * The X coordinate of the mouse pointer relative to the whole document.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpageX: number\r\n\r\n\t/**\r\n\t * The Y coordinate of the mouse pointer relative to the whole document.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpageY: number\r\n}\r\n\r\n/**\r\n * Return a stateful value of mouse coordinate.\r\n *\r\n * @returns The coordinate of `pageX`, `pageY`, `clientX` and `clientY`\r\n * @see https://urh-react-hooks.vercel.app/docs/hooks/use-mouse-move\r\n */\r\nexport function useMouseMove(): MouseOptions {\r\n\tconst [mouse, setMouse] = useState<MouseOptions>({\r\n\t\tclientX: 0,\r\n\t\tclientY: 0,\r\n\t\tpageX: 0,\r\n\t\tpageY: 0,\r\n\t})\r\n\r\n\tfunction init(ev: MouseEvent) {\r\n\t\tif (typeof window !== undefined) {\r\n\t\t\tsetMouse({\r\n\t\t\t\tclientX: ev.clientX,\r\n\t\t\t\tclientY: ev.clientY,\r\n\t\t\t\tpageX: ev.pageX,\r\n\t\t\t\tpageY: ev.pageY,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tuseEventListener<any, keyof number[]>('mousemove', init, [\r\n\t\tmouse.clientX,\r\n\t\tmouse.clientY,\r\n\t\tmouse.pageX,\r\n\t\tmouse.pageY,\r\n\t])\r\n\r\n\treturn {\r\n\t\tclientX: mouse.clientX,\r\n\t\tclientY: mouse.clientY,\r\n\t\tpageX: mouse.pageX,\r\n\t\tpageY: mouse.pageY,\r\n\t}\r\n}\r\n","/**\r\n * Auto remove event listener\r\n *\r\n * @type void\r\n */\r\n\r\nimport { useEffect } from 'react'\r\n\r\ntype EventType = keyof WindowEventMap\r\ntype ListerType = EventListenerOrEventListenerObject\r\n\r\nexport function useEventListener<\r\n\tMaybeType extends ListerType,\r\n\tMaybeDep = React.DependencyList,\r\n>(type: EventType, handler: MaybeType, deps?: MaybeDep[]) {\r\n\treturn useEffect(() => {\r\n\t\twindow.addEventListener(type, handler)\r\n\r\n\t\treturn () => window.removeEventListener(type, handler)\r\n\t}, [deps])\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nexport type geolocationOption = {\r\n\tlatitude: number | null\r\n\tlongitude: number | null\r\n\taccuracy: number | null\r\n\theading: number | null\r\n\tspeed: number | null\r\n\taltitude: number | null\r\n\taltitudeAccuracy: number | null\r\n}\r\n\r\nexport type geoError = {\r\n\tcode: number | null\r\n\tmessage: string | null\r\n\tPERMISSION_DENIED: number | null\r\n}\r\n\r\nexport type geoLocationReturn = {\r\n\t/**\r\n\t * Geolocation coords type.\r\n\t *\r\n\t * @return `coords`\r\n\t */\r\n\tcoords: geolocationOption\r\n\r\n\t/**\r\n\t * Geolocation errors type.\r\n\t *\r\n\t * @return `error`\r\n\t */\r\n\terror: geoError\r\n}\r\n\r\n/**\r\n * Return a stateful value of current geolocation.\r\n *\r\n * @returns `coords` & `errors`\r\n * @see https://urh-react-hooks.vercel.app/docs/hooks/use-geo\r\n */\r\nexport function useGeolocaiton(): geoLocationReturn {\r\n\tconst [geo, setGeo] = useState<geolocationOption>({\r\n\t\taltitude: null,\r\n\t\taltitudeAccuracy: null,\r\n\t\theading: null,\r\n\t\tspeed: null,\r\n\t\taccuracy: null,\r\n\t\tlatitude: null,\r\n\t\tlongitude: null,\r\n\t})\r\n\r\n\tconst [geoError, setGeoError] = useState<geoError>({\r\n\t\tcode: null,\r\n\t\tmessage: null,\r\n\t\tPERMISSION_DENIED: null,\r\n\t})\r\n\r\n\tconst init = () => {\r\n\t\t/**\r\n\t\t * Geolocation options.\r\n\t\t *\r\n\t\t * @tiemout 5000\r\n\t\t * @enableHighAccuracy true\r\n\t\t * @maximumAge 0\r\n\t\t */\r\n\t\tconst options = {\r\n\t\t\tenableHighAccuracy: true,\r\n\t\t\ttimeout: 5000,\r\n\t\t\tmaximumAge: 0,\r\n\t\t}\r\n\r\n\t\tif (navigator && 'geolocation' in navigator) {\r\n\t\t\tnavigator.geolocation.getCurrentPosition(\r\n\t\t\t\t(s) => {\r\n\t\t\t\t\tsuccess(s.coords)\r\n\t\t\t\t},\r\n\t\t\t\t(e) => {\r\n\t\t\t\t\terror(e)\r\n\t\t\t\t},\r\n\t\t\t\toptions,\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tconst success = (coords: geolocationOption) => {\r\n\t\t\tconst {\r\n\t\t\t\taltitude,\r\n\t\t\t\taltitudeAccuracy,\r\n\t\t\t\theading,\r\n\t\t\t\tspeed,\r\n\t\t\t\taccuracy,\r\n\t\t\t\tlatitude,\r\n\t\t\t\tlongitude,\r\n\t\t\t} = coords\r\n\r\n\t\t\tsetGeo({\r\n\t\t\t\taccuracy: accuracy,\r\n\t\t\t\tlatitude: latitude,\r\n\t\t\t\tlongitude: longitude,\r\n\t\t\t\taltitude: altitude,\r\n\t\t\t\taltitudeAccuracy: altitudeAccuracy,\r\n\t\t\t\theading: heading,\r\n\t\t\t\tspeed: speed,\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tconst error = (payload: geoError) => {\r\n\t\t\tsetGeoError({\r\n\t\t\t\tcode: payload.code,\r\n\t\t\t\tmessage: payload.message,\r\n\t\t\t\tPERMISSION_DENIED: payload.PERMISSION_DENIED,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tinit()\r\n\t}, [geo.latitude, geo.longitude, geo.heading, geo.speed])\r\n\r\n\treturn {\r\n\t\tcoords: {\r\n\t\t\taccuracy: geo.accuracy,\r\n\t\t\taltitude: geo.altitude,\r\n\t\t\taltitudeAccuracy: geo.altitudeAccuracy,\r\n\t\t\theading: geo.heading,\r\n\t\t\tlatitude: geo.latitude,\r\n\t\t\tlongitude: geo.longitude,\r\n\t\t\tspeed: geo.speed,\r\n\t\t},\r\n\t\terror: {\r\n\t\t\tcode: geoError.code,\r\n\t\t\tmessage: geoError.message,\r\n\t\t\tPERMISSION_DENIED: geoError.PERMISSION_DENIED,\r\n\t\t},\r\n\t}\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nexport type windowSizeOption = {\r\n\t/**\r\n\t * The width of the window\r\n\t */\r\n\twidth: number\r\n\r\n\t/**\r\n\t * The height of\r\n\t */\r\n\theight: number\r\n}\r\n\r\n/**\r\n * Return a stateful value of current window size.\r\n *\r\n * @returns the `width` and the `height`\r\n * @see https://urh-react-hooks.vercel.app/docs/hooks/use-window-size\r\n */\r\nexport function useWindowSize(): windowSizeOption {\r\n\tconst [windowSize, setWindowSize] = useState<windowSizeOption>({\r\n\t\theight: window.innerHeight,\r\n\t\twidth: window.innerWidth,\r\n\t})\r\n\r\n\tconst init = () => {\r\n\t\tif (typeof window !== null) {\r\n\t\t\tconst win = window\r\n\r\n\t\t\tsetWindowSize({\r\n\t\t\t\theight: win.innerHeight,\r\n\t\t\t\twidth: win.innerWidth,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('resize', init)\r\n\r\n\t\treturn () => window.removeEventListener('resize', init)\r\n\t}, [windowSize.width, windowSize.height])\r\n\r\n\treturn {\r\n\t\theight: windowSize.height,\r\n\t\twidth: windowSize.width,\r\n\t}\r\n}\r\n"],"names":["useOnline","isOnline","setIsOnline","useState","online","offline","useEffect","window","addEventListener","removeEventListener","useIntersectionObserver","options","threshold","rootMargin","root","className","target","intersect","IntersectionObserver","observer","entries","forEach","entry","classList","toggle","isIntersecting","unobserve","document","querySelectorAll","t","observe","useAcceptOnlyInteger","keysCanBeAccept","allowKey","value","dispatch","useReducer","state","action","setValue","handleKey","event","ev","includes","key","code","preventDefault","useLanguage","lang","setLang","navigator","language","languages","init","useNetworkConnection","network","setNetwork","nav","connection","downlink","effectiveType","rtt","saveData","useMouseMove","mouse","setMouse","clientX","clientY","pageX","pageY","type","handler","deps","useGeolocaiton","geo","setGeo","altitude","altitudeAccuracy","heading","speed","accuracy","latitude","longitude","geoError","setGeoError","message","PERMISSION_DENIED","enableHighAccuracy","timeout","maximumAge","geolocation","getCurrentPosition","s","success","coords","e","error","payload","useWindowSize","windowSize","setWindowSize","height","innerHeight","width","innerWidth","win"],"mappings":"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"}