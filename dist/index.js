"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("react");exports.useAcceptOnlyInteger=function(){const t=["0","1","2","3","4","5","6","7","8","9","0"],n=["Backspace","Delete","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","ShiftLeft","AltLeft","F5"],[i,o]=e.useReducer(((e,t)=>t),"");return{value:i,setValue:e=>{o(e)},handleKey:e=>{const i=e;return!(!t.includes(i.key)&&!n.includes(i.code))||(i.preventDefault(),!1)}}},exports.useGeolocaiton=function(){const[t,n]=e.useState({altitude:null,altitudeAccuracy:null,heading:null,speed:null,accuracy:null,latitude:null,longitude:null}),[i,o]=e.useState({code:null,message:null,PERMISSION_DENIED:null});return e.useEffect((()=>{(()=>{const e={enableHighAccuracy:!0,timeout:5e3,maximumAge:0};navigator&&"geolocation"in navigator&&navigator.geolocation.getCurrentPosition((e=>{t(e.coords)}),(e=>{i(e)}),e);const t=e=>{const{altitude:t,altitudeAccuracy:i,heading:o,speed:c,accuracy:r,latitude:a,longitude:s}=e;n({accuracy:r,latitude:a,longitude:s,altitude:t,altitudeAccuracy:i,heading:o,speed:c})},i=e=>{o({code:e.code,message:e.message,PERMISSION_DENIED:e.PERMISSION_DENIED})}})()}),[t.latitude,t.longitude,t.heading,t.speed]),{coords:{accuracy:t.accuracy,altitude:t.altitude,altitudeAccuracy:t.altitudeAccuracy,heading:t.heading,latitude:t.latitude,longitude:t.longitude,speed:t.speed},error:{code:i.code,message:i.message,PERMISSION_DENIED:i.PERMISSION_DENIED}}},exports.useIntersectionObserver=function(t){const{threshold:n=0,rootMargin:i="0px",root:o,className:c,target:r}=t,a=()=>{if(void 0!==typeof IntersectionObserver){const e=new IntersectionObserver((t=>{t.forEach((t=>{t.target.classList.toggle(c),t.isIntersecting&&e.unobserve(t.target)}))}),{threshold:n,root:o,rootMargin:i});document.querySelectorAll(r).forEach((t=>{e.observe(t)}))}};e.useEffect((()=>{a()}),[a])},exports.useLanguage=function(){const[t,n]=e.useState(navigator.language);return e.useEffect((()=>{(()=>{const e=navigator.languages;n(e[1])})()}),[t]),{lang:t}},exports.useMouseMove=function(){const[t,n]=e.useState({clientX:0,clientY:0,pageX:0,pageY:0});var i,o,c;return i="mousemove",o=function(e){void 0!==typeof window&&n({clientX:e.clientX,clientY:e.clientY,pageX:e.pageX,pageY:e.pageY})},c=[t.clientX,t.clientY,t.pageX,t.pageY],e.useEffect((()=>(window.addEventListener(i,o),()=>window.removeEventListener(i,o))),[c]),{clientX:t.clientX,clientY:t.clientY,pageX:t.pageX,pageY:t.pageY}},exports.useNetworkConnection=function(t){const[n,i]=e.useState({});return e.useEffect((()=>{(()=>{const e=window?.navigator;if(e&&"connection"in e){const t=e.connection;i({downlink:t.downlink,effectiveType:t.effectiveType,rtt:t.rtt,saveData:t.saveData})}})()}),[n?.downlink,n?.effectiveType,n?.rtt]),{network:n}},exports.useOnline=function(){const[t,n]=e.useState(!0);function i(){n(!0)}function o(){n(!1)}return e.useEffect((()=>(window.addEventListener("online",i),window.addEventListener("offline",o),()=>(window.removeEventListener("online",i),window.removeEventListener("offline",o)))),[t]),{isOnline:t}},exports.useWindowSize=function(){const[t,n]=e.useState({height:window.innerHeight,width:window.innerWidth}),i=()=>{if(null!==typeof window){const e=window;n({height:e.innerHeight,width:e.innerWidth})}};return e.useEffect((()=>(window.addEventListener("resize",i),()=>window.removeEventListener("resize",i))),[t.width,t.height]),{height:t.height,width:t.width}};
//# sourceMappingURL=index.js.map
