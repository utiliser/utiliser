"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[956],{5318:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(7378);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var a=r.createContext({}),u=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(a.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(t),f=o,m=p["".concat(a,".").concat(f)]||p[f]||d[f]||i;return t?r.createElement(m,l(l({ref:n},c),{},{components:t})):r.createElement(m,l({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,l=new Array(i);l[0]=f;var s={};for(var a in n)hasOwnProperty.call(n,a)&&(s[a]=n[a]);s.originalType=e,s[p]="string"==typeof e?e:o,l[1]=s;for(var u=2;u<i;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},7388:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=t(5773),o=(t(7378),t(5318));const i={id:"use-online",title:"useOnline",description:"useOnline",tags:["hook","useOnline"]},l=void 0,s={unversionedId:"hooks/use-online",id:"hooks/use-online",title:"useOnline",description:"useOnline",source:"@site/docs/hooks/8-use-online.md",sourceDirName:"hooks",slug:"/hooks/use-online",permalink:"/utiliser/docs/hooks/use-online",draft:!1,editUrl:"https://github.com/utiliser/utiliser/docs/hooks/8-use-online.md",tags:[{label:"hook",permalink:"/utiliser/docs/tags/hook"},{label:"useOnline",permalink:"/utiliser/docs/tags/use-online"}],version:"current",sidebarPosition:8,frontMatter:{id:"use-online",title:"useOnline",description:"useOnline",tags:["hook","useOnline"]},sidebar:"docSidebar",previous:{title:"useNetworkConnection",permalink:"/utiliser/docs/hooks/use-network-connection"},next:{title:"useWindowScroll",permalink:"/utiliser/docs/hooks/use-window-scroll"}},a={},u=[{value:"Definition",id:"definition",level:3},{value:"Usage Example",id:"usage-example",level:3}],c={toc:u},p="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"definition"},"Definition"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"useOnline is a hook which return a status whether you are connected to the internet or not.")),(0,o.kt)("h3",{id:"usage-example"},"Usage Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useOnline } from 'urh-react-hooks'\n\nconst App = () => {\n\n  const { isOnline } = useOnline()\n\n  return (\n    <div>\n      { isOnline ? <p>Online</p> : <p>Offline</p> }\n    </div>\n  )\n}\n\nexport default App\n")))}d.isMDXComponent=!0}}]);