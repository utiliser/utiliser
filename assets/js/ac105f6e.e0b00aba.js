"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[366],{5318:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var o=n(7378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),u=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=u(e.components);return o.createElement(c.Provider,{value:t},e.children)},p="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,f=p["".concat(c,".").concat(d)]||p[d]||k[d]||i;return n?o.createElement(f,s(s({ref:t},l),{},{components:n})):o.createElement(f,s({ref:t},l))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[p]="string"==typeof e?e:r,s[1]=a;for(var u=2;u<i;u++)s[u]=n[u];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6748:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>k,frontMatter:()=>i,metadata:()=>a,toc:()=>u});var o=n(5773),r=(n(7378),n(5318));const i={id:"use-network-connection",title:"useNetworkConnection",description:"useNetworkConnection is a hook which return network type, downlink, rtt, saveData",tags:["hook","useNetworkConnection"]},s=void 0,a={unversionedId:"hooks/use-network-connection",id:"hooks/use-network-connection",title:"useNetworkConnection",description:"useNetworkConnection is a hook which return network type, downlink, rtt, saveData",source:"@site/docs/hooks/7-use-network-connection.md",sourceDirName:"hooks",slug:"/hooks/use-network-connection",permalink:"/utiliser/docs/hooks/use-network-connection",draft:!1,editUrl:"https://github.com/utiliser/utiliser/docs/hooks/7-use-network-connection.md",tags:[{label:"hook",permalink:"/utiliser/docs/tags/hook"},{label:"useNetworkConnection",permalink:"/utiliser/docs/tags/use-network-connection"}],version:"current",sidebarPosition:7,frontMatter:{id:"use-network-connection",title:"useNetworkConnection",description:"useNetworkConnection is a hook which return network type, downlink, rtt, saveData",tags:["hook","useNetworkConnection"]},sidebar:"docSidebar",previous:{title:"useMouseMove",permalink:"/utiliser/docs/hooks/use-mouse-move"},next:{title:"useOnline",permalink:"/utiliser/docs/hooks/use-online"}},c={},u=[{value:"Definition",id:"definition",level:3},{value:"Usage Example",id:"usage-example",level:3}],l={toc:u},p="wrapper";function k(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"definition"},"Definition"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"useNetworkConnection is a hook which return network type, downlink, rtt, saveData.")),(0,r.kt)("h3",{id:"usage-example"},"Usage Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useNetworkConnection } from 'urh-react-hooks'\n\nconst App = () => {\n\n  const { network } = useNetworkConnection()\n\n  return (\n    <div>\n      <p>{network?.downlink}</p>\n      <p>{network?.effectiveType}</p>\n      <p>{network?.rtt}</p>\n      <p>{network?.saveData}</p>\n    </div>\n  )\n}\n\nexport default App\n")))}k.isMDXComponent=!0}}]);