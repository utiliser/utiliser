"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[958],{5318:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7378);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=l(n),d=o,f=p["".concat(s,".").concat(d)]||p[d]||y[d]||i;return n?r.createElement(f,c(c({ref:t},u),{},{components:n})):r.createElement(f,c({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,c=new Array(i);c[0]=d;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[p]="string"==typeof e?e:o,c[1]=a;for(var l=2;l<i;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2309:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>y,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var r=n(5773),o=(n(7378),n(5318));const i={id:"use-accept-only-interger",title:"useAcceptOnlyInteger",description:"useAcceptOnlyInteger is a hook use to prevent user from input the characters.",tags:["hook","useAcceptOnlyInteger"]},c=void 0,a={unversionedId:"hooks/use-accept-only-interger",id:"hooks/use-accept-only-interger",title:"useAcceptOnlyInteger",description:"useAcceptOnlyInteger is a hook use to prevent user from input the characters.",source:"@site/docs/hooks/1-use-accept-only-interger.md",sourceDirName:"hooks",slug:"/hooks/use-accept-only-interger",permalink:"/utiliser/docs/hooks/use-accept-only-interger",draft:!1,editUrl:"https://github.com/utiliser/utiliser/docs/hooks/1-use-accept-only-interger.md",tags:[{label:"hook",permalink:"/utiliser/docs/tags/hook"},{label:"useAcceptOnlyInteger",permalink:"/utiliser/docs/tags/use-accept-only-integer"}],version:"current",sidebarPosition:1,frontMatter:{id:"use-accept-only-interger",title:"useAcceptOnlyInteger",description:"useAcceptOnlyInteger is a hook use to prevent user from input the characters.",tags:["hook","useAcceptOnlyInteger"]},sidebar:"docSidebar",previous:{title:"Getting Started",permalink:"/utiliser/docs/intro"},next:{title:"useGeolocation",permalink:"/utiliser/docs/hooks/use-geo"}},s={},l=[{value:"Definition",id:"definition",level:3},{value:"Usage Example",id:"usage-example",level:3}],u={toc:l},p="wrapper";function y(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"definition"},"Definition"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"useAcceptOnlyInteger is a hook use to prevent user from input the characters.")),(0,o.kt)("h3",{id:"usage-example"},"Usage Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useAcceptOnlyInteger } from '@utiliser/react-hooks'\n\nconst App = () => {\n    const { value, setValue, handleKey } = useAcceptOnlyInteger()\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                value={value}\n                onChange={(e) => setValue(e.target.value)}\n                onKeyDown={handleKey}\n            />\n        </div>\n    )\n}\n\nexport default App\n")))}y.isMDXComponent=!0}}]);