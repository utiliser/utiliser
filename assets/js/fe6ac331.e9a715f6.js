"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[95],{5318:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>h});var n=r(7378);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var a=n.createContext({}),u=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(a.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,s=e.originalType,a=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(r),f=i,h=p["".concat(a,".").concat(f)]||p[f]||d[f]||s;return r?n.createElement(h,o(o({ref:t},l),{},{components:r})):n.createElement(h,o({ref:t},l))}));function h(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=r.length,o=new Array(s);o[0]=f;var c={};for(var a in t)hasOwnProperty.call(t,a)&&(c[a]=t[a]);c.originalType=e,c[p]="string"==typeof e?e:i,o[1]=c;for(var u=2;u<s;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},8981:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var n=r(5773),i=(r(7378),r(5318));const s={id:"use-intersect",title:"useIntersectionObserver",description:"useIntersectionObserver is an intersection function which trigger when it reach the targets.",tags:["hook","useIntersectionObserver"]},o=void 0,c={unversionedId:"hooks/use-intersect",id:"hooks/use-intersect",title:"useIntersectionObserver",description:"useIntersectionObserver is an intersection function which trigger when it reach the targets.",source:"@site/docs/hooks/3-user-intersect.md",sourceDirName:"hooks",slug:"/hooks/use-intersect",permalink:"/utiliser/docs/hooks/use-intersect",draft:!1,editUrl:"https://github.com/utiliser/utiliser/docs/hooks/3-user-intersect.md",tags:[{label:"hook",permalink:"/utiliser/docs/tags/hook"},{label:"useIntersectionObserver",permalink:"/utiliser/docs/tags/use-intersection-observer"}],version:"current",sidebarPosition:3,frontMatter:{id:"use-intersect",title:"useIntersectionObserver",description:"useIntersectionObserver is an intersection function which trigger when it reach the targets.",tags:["hook","useIntersectionObserver"]},sidebar:"docSidebar",previous:{title:"useGeolocation",permalink:"/utiliser/docs/hooks/use-geo"},next:{title:"useIsEmail",permalink:"/utiliser/docs/hooks/use-is-email"}},a={},u=[{value:"Definition",id:"definition",level:3},{value:"Usage Example",id:"usage-example",level:3}],l={toc:u},p="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(p,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"definition"},"Definition"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"useIntersectionObserver is an intersection function which trigger when it reach the targets.")),(0,i.kt)("h3",{id:"usage-example"},"Usage Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useIntersectionObserver } from '@utiliser/react-hooks'\n\nconst App = () => {\n    useIntersectionObserver({\n        target: '.target',\n        className: 'popUp', // CSS class which trigger when the target intersect\n    })\n\n    return (\n        <div>\n            <div className=\"target\">I pop up</div>\n        </div>\n    )\n}\n\nexport default App\n")))}d.isMDXComponent=!0}}]);