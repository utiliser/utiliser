"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[366],{5318:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>f});var o=t(7378);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),u=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=u(e.components);return o.createElement(s.Provider,{value:n},e.children)},p="mdxType",k={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(t),d=r,f=p["".concat(s,".").concat(d)]||p[d]||k[d]||i;return t?o.createElement(f,a(a({ref:n},l),{},{components:t})):o.createElement(f,a({ref:n},l))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=d;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[p]="string"==typeof e?e:r,a[1]=c;for(var u=2;u<i;u++)a[u]=t[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6748:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>k,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var o=t(5773),r=(t(7378),t(5318));const i={id:"use-network-connection",title:"useNetworkConnection",description:"useNetworkConnection is a hook which return network type, downlink, rtt, saveData",tags:["hook","useNetworkConnection"]},a=void 0,c={unversionedId:"hooks/use-network-connection",id:"hooks/use-network-connection",title:"useNetworkConnection",description:"useNetworkConnection is a hook which return network type, downlink, rtt, saveData",source:"@site/docs/hooks/7-use-network-connection.md",sourceDirName:"hooks",slug:"/hooks/use-network-connection",permalink:"/docs/hooks/use-network-connection",draft:!1,editUrl:"https://github.com/utiliser/utiliser/docs/hooks/7-use-network-connection.md",tags:[{label:"hook",permalink:"/docs/tags/hook"},{label:"useNetworkConnection",permalink:"/docs/tags/use-network-connection"}],version:"current",sidebarPosition:7,frontMatter:{id:"use-network-connection",title:"useNetworkConnection",description:"useNetworkConnection is a hook which return network type, downlink, rtt, saveData",tags:["hook","useNetworkConnection"]},sidebar:"docSidebar",previous:{title:"useMouseMove",permalink:"/docs/hooks/use-mouse-move"},next:{title:"useOnline",permalink:"/docs/hooks/use-online"}},s={},u=[{value:"Definition",id:"definition",level:3},{value:"Usage Example",id:"usage-example",level:3}],l={toc:u},p="wrapper";function k(e){let{components:n,...t}=e;return(0,r.kt)(p,(0,o.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"definition"},"Definition"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"useNetworkConnection is a hook which return network type, downlink, rtt, saveData.")),(0,r.kt)("h3",{id:"usage-example"},"Usage Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useNetworkConnection } from 'urh-react-hooks'\n\nconst App = () => {\n\n  const { network } = useNetworkConnection()\n\n  return (\n    <div>\n      <p>{network?.downlink}</p>\n      <p>{network?.effectiveType}</p>\n      <p>{network?.rtt}</p>\n      <p>{network?.saveData}</p>\n    </div>\n  )\n}\n\nexport default App\n")))}k.isMDXComponent=!0}}]);