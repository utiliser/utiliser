"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[461],{5312:e=>{e.exports=JSON.parse('{"label":"hook","permalink":"/utiliser/docs/tags/hook","allTagsPath":"/utiliser/docs/tags","count":10,"items":[{"id":"hooks/use-accept-only-interger","title":"useAcceptOnlyInteger","description":"useAcceptOnlyInteger is a hook use to prevent user from input the characters.","permalink":"/utiliser/docs/hooks/use-accept-only-interger"},{"id":"hooks/use-geo","title":"useGeolocation","description":"useGeolocation is a hook which return location information.","permalink":"/utiliser/docs/hooks/use-geo"},{"id":"hooks/use-intersect","title":"useIntersectionObserver","description":"useIntersectionObserver is an intersection function which trigger when it reach the targets.","permalink":"/utiliser/docs/hooks/use-intersect"},{"id":"hooks/use-is-email","title":"useIsEmail","description":"useIsEmail is a hook which return true if the value that give match email regex pattern.","permalink":"/utiliser/docs/hooks/use-is-email"},{"id":"hooks/use-language","title":"useLanguage","description":"useLanguage is a hook use to detect a current languauge is being used as your preference.","permalink":"/utiliser/docs/hooks/use-language"},{"id":"hooks/use-mouse-move","title":"useMouseMove","description":"useMouseMove is a hook which return `ts clientX`, `ts clientY`, `ts pageX`, `ts pageY`","permalink":"/utiliser/docs/hooks/use-mouse-move"},{"id":"hooks/use-network-connection","title":"useNetworkConnection","description":"useNetworkConnection is a hook which return network type, downlink, rtt, saveData","permalink":"/utiliser/docs/hooks/use-network-connection"},{"id":"hooks/use-online","title":"useOnline","description":"useOnline","permalink":"/utiliser/docs/hooks/use-online"},{"id":"hooks/use-window-scroll","title":"useWindowScroll","description":"useWindowScroll is a hook which return `ts scrollX`, `ts scrollY` when scrolling.","permalink":"/utiliser/docs/hooks/use-window-scroll"},{"id":"hooks/use-window-size","title":"useWindowSize","description":"useWindowSize is a hook which return `ts height`, `ts widht` when resizing the window.","permalink":"/utiliser/docs/hooks/use-window-size"}]}')}}]);