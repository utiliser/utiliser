"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[736],{5318:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(7378);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=u(r),f=i,h=m["".concat(l,".").concat(f)]||m[f]||p[f]||a;return r?n.createElement(h,o(o({ref:t},c),{},{components:r})):n.createElement(h,o({ref:t},c))}));function h(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7511:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var n=r(5773),i=(r(7378),r(5318));const a={id:"use-is-email",title:"useIsEmail",description:"useIsEmail is a hook which return true if the value that give match email regex pattern.",tags:["hook","useIsEmail"]},o=void 0,s={unversionedId:"hooks/use-is-email",id:"hooks/use-is-email",title:"useIsEmail",description:"useIsEmail is a hook which return true if the value that give match email regex pattern.",source:"@site/docs/hooks/4-use-is-email.md",sourceDirName:"hooks",slug:"/hooks/use-is-email",permalink:"/utiliser/docs/hooks/use-is-email",draft:!1,editUrl:"https://github.com/utiliser/utiliser/docs/hooks/4-use-is-email.md",tags:[{label:"hook",permalink:"/utiliser/docs/tags/hook"},{label:"useIsEmail",permalink:"/utiliser/docs/tags/use-is-email"}],version:"current",sidebarPosition:4,frontMatter:{id:"use-is-email",title:"useIsEmail",description:"useIsEmail is a hook which return true if the value that give match email regex pattern.",tags:["hook","useIsEmail"]},sidebar:"docSidebar",previous:{title:"useIntersectionObserver",permalink:"/utiliser/docs/hooks/use-intersect"},next:{title:"useLanguage",permalink:"/utiliser/docs/hooks/use-language"}},l={},u=[{value:"Definition",id:"definition",level:3},{value:"Usage Example",id:"usage-example",level:3}],c={toc:u},m="wrapper";function p(e){let{components:t,...r}=e;return(0,i.kt)(m,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"definition"},"Definition"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"useIsEmail is a hook which return true if the value that give match email regex pattern.")),(0,i.kt)("h3",{id:"usage-example"},"Usage Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useIsEmail } from 'urh-react-hooks'\n\nconst App = () => {\n\n  const [email, setEmail] = useState<string>('')\n  const { isEmail, checkIfEmail } = useIsEmail(email)\n\n\n  return (\n    <div>\n      <input \n        type=\"text\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        onKeyDown={checkIfEmail}\n      />\n    </div>\n  )\n}\n\nexport default App\n")))}p.isMDXComponent=!0}}]);